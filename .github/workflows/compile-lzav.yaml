name: Compile Native Libraries && NuGet Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux-x64]
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Compile for ${{ matrix.target }}
      shell: pwsh
      run: |
        pwsh build-prep.ps1
        pwsh build-target.ps1 ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-build
        path: src/
        
  build-linux-arm:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        target: [linux-arm, linux-arm64]
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Compile for ${{ matrix.target }}
        shell: pwsh
        run: |
          pwsh build-prep.ps1
          pwsh build-target.ps1 ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: src/

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [osx-arm64, osx-x64]
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Compile for ${{ matrix.target }}
      shell: pwsh
      run: |
        pwsh build-prep.ps1
        pwsh build-target.ps1 ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-build
        path: src/

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [win-x64, win-x86]
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Compile for ${{ matrix.target }}
      shell: pwsh
      run: |
        pwsh build-prep.ps1
        pwsh build-target.ps1 ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-build
        path: src/

  build-windows-arm:
    runs-on: windows-11-arm
    strategy:
      matrix:
        target: [win-arm64]
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Compile for ${{ matrix.target }}
      shell: pwsh
      run: |
        pwsh build-prep.ps1
        pwsh build-target.ps1 ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-build
        path: src/

  publish-nuget:
    needs: [build-linux, build-macos, build-windows, build-windows-arm]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: src
        pattern: '*-build'
        merge-multiple: true
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
      
    - name: Push to NuGet
      shell: pwsh
      run: |
        cd src
        dotnet restore
        dotnet pack -c Release -p:PackageVersion=${{ github.event.inputs.version }} --output nupkg
        dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json